<?php
/**
 * ConnectCarrierRequestBodyTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Nmusco\ShipEngine\v1
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ShipEngine API
 *
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others.
 *
 * The version of the OpenAPI document: 1.1.202012041812
 * Contact: sales@shipengine.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Nmusco\ShipEngine\v1;

use PHPUnit\Framework\TestCase;

/**
 * ConnectCarrierRequestBodyTest Class Doc Comment
 *
 * @category    Class
 * @description ConnectCarrierRequestBody
 * @package     Nmusco\ShipEngine\v1
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ConnectCarrierRequestBodyTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ConnectCarrierRequestBody"
     */
    public function testConnectCarrierRequestBody()
    {
    }

    /**
     * Test attribute "nickname"
     */
    public function testPropertyNickname()
    {
    }

    /**
     * Test attribute "username"
     */
    public function testPropertyUsername()
    {
    }

    /**
     * Test attribute "password"
     */
    public function testPropertyPassword()
    {
    }

    /**
     * Test attribute "merchant_seller_id"
     */
    public function testPropertyMerchantSellerId()
    {
    }

    /**
     * Test attribute "mws_auth_token"
     */
    public function testPropertyMwsAuthToken()
    {
    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {
    }

    /**
     * Test attribute "auth_code"
     */
    public function testPropertyAuthCode()
    {
    }

    /**
     * Test attribute "account_number"
     */
    public function testPropertyAccountNumber()
    {
    }

    /**
     * Test attribute "ftp_username"
     */
    public function testPropertyFtpUsername()
    {
    }

    /**
     * Test attribute "ftp_password"
     */
    public function testPropertyFtpPassword()
    {
    }

    /**
     * Test attribute "api_key"
     */
    public function testPropertyApiKey()
    {
    }

    /**
     * Test attribute "api_secret"
     */
    public function testPropertyApiSecret()
    {
    }

    /**
     * Test attribute "contract_id"
     */
    public function testPropertyContractId()
    {
    }

    /**
     * Test attribute "client_id"
     */
    public function testPropertyClientId()
    {
    }

    /**
     * Test attribute "pickup_number"
     */
    public function testPropertyPickupNumber()
    {
    }

    /**
     * Test attribute "distribution_center"
     */
    public function testPropertyDistributionCenter()
    {
    }

    /**
     * Test attribute "site_id"
     */
    public function testPropertySiteId()
    {
    }

    /**
     * Test attribute "account"
     */
    public function testPropertyAccount()
    {
    }

    /**
     * Test attribute "passphrase"
     */
    public function testPropertyPassphrase()
    {
    }

    /**
     * Test attribute "address1"
     */
    public function testPropertyAddress1()
    {
    }

    /**
     * Test attribute "city"
     */
    public function testPropertyCity()
    {
    }

    /**
     * Test attribute "company"
     */
    public function testPropertyCompany()
    {
    }

    /**
     * Test attribute "country_code"
     */
    public function testPropertyCountryCode()
    {
    }

    /**
     * Test attribute "first_name"
     */
    public function testPropertyFirstName()
    {
    }

    /**
     * Test attribute "last_name"
     */
    public function testPropertyLastName()
    {
    }

    /**
     * Test attribute "phone"
     */
    public function testPropertyPhone()
    {
    }

    /**
     * Test attribute "postal_code"
     */
    public function testPropertyPostalCode()
    {
    }

    /**
     * Test attribute "state"
     */
    public function testPropertyState()
    {
    }

    /**
     * Test attribute "agree_to_eula"
     */
    public function testPropertyAgreeToEula()
    {
    }

    /**
     * Test attribute "mailer_id"
     */
    public function testPropertyMailerId()
    {
    }

    /**
     * Test attribute "induction_site"
     */
    public function testPropertyInductionSite()
    {
    }

    /**
     * Test attribute "activation_key"
     */
    public function testPropertyActivationKey()
    {
    }

    /**
     * Test attribute "contact_name"
     */
    public function testPropertyContactName()
    {
    }

    /**
     * Test attribute "access_key"
     */
    public function testPropertyAccessKey()
    {
    }

    /**
     * Test attribute "sendle_id"
     */
    public function testPropertySendleId()
    {
    }

    /**
     * Test attribute "account_country_code"
     */
    public function testPropertyAccountCountryCode()
    {
    }

    /**
     * Test attribute "account_postal_code"
     */
    public function testPropertyAccountPostalCode()
    {
    }

    /**
     * Test attribute "agree_to_technology_agreement"
     */
    public function testPropertyAgreeToTechnologyAgreement()
    {
    }

    /**
     * Test attribute "ancillary_endorsement"
     */
    public function testPropertyAncillaryEndorsement()
    {
    }

    /**
     * Test attribute "address2"
     */
    public function testPropertyAddress2()
    {
    }

    /**
     * Test attribute "meter_number"
     */
    public function testPropertyMeterNumber()
    {
    }

    /**
     * Test attribute "profile_name"
     */
    public function testPropertyProfileName()
    {
    }

    /**
     * Test attribute "merchant_id"
     */
    public function testPropertyMerchantId()
    {
    }

    /**
     * Test attribute "oba_email"
     */
    public function testPropertyObaEmail()
    {
    }

    /**
     * Test attribute "company_name"
     */
    public function testPropertyCompanyName()
    {
    }

    /**
     * Test attribute "street_line1"
     */
    public function testPropertyStreetLine1()
    {
    }

    /**
     * Test attribute "street_line2"
     */
    public function testPropertyStreetLine2()
    {
    }

    /**
     * Test attribute "street_line3"
     */
    public function testPropertyStreetLine3()
    {
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
    }

    /**
     * Test attribute "invoice"
     */
    public function testPropertyInvoice()
    {
    }
}
